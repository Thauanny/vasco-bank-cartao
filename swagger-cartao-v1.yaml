openapi: 3.0.3
info:
  title: vasco-bank-cartao - OpenAPI 3.0
  description: ''
  version: 1.0.11

servers:
  - url: https:/vasco-bank-cartao/api/v1
  
tags:
  - name: cartaoCredito
    description: Operations about user
paths:

  /cartaoCredito/all/{idConta}:
    get:
      tags:
        - cartaoCredito
      summary: Retorna informações de todos cartoes de credito de uma conta caso existir
      description: This can only be done by the logged in user.
      operationId: cartaoall
      parameters:
        - name: idConta
          in: path
          description: ID do usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartoes'
            application/xml:
              schema:
                $ref: '#/components/schemas/cartoes'
  /cartaoCredito/{idCartao}:
    get:
      tags:
        - cartaoCredito
      summary: Retorna informação do cartao de credito de uma conta caso existir
      description: This can only be done by the logged in user.
      operationId: cartao
      parameters:
        - name: idCartao
          in: path
          description: ID do usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
            application/xml:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
    delete:
      tags:
        - cartaoCredito
      summary: Deletar cartao do usuario de conta especificada
      description: Creates list of users with given input array
      operationId: cartaoDelete
      parameters:
        - name: idCartao
          in: path
          description: ID do usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartaoCredito'          
            application/xml:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
        default:
          description: successful operation
  /cartaoCredito/{idUser}:
    post:
      tags:
        - cartaoCredito
      summary: Criar cartao na conta
      description: Creates list of users with given input array
      operationId: cartaoPost
      parameters:
        - name: idUser
          in: path
          description: ID do usuario
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cartaoCredito'
          application/xml:
            schema:
              $ref: '#/components/schemas/cartaoCredito'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cartaoCredito'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartaoCredito'          
            application/xml:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
        default:
          description: successful operation

  /cartaoCredito/limite/{cartaoId}:
    get:
      tags:
        - cartaoCredito
      summary: Recuperar limite do cartao
      description: ''
      operationId: cartaoCreditoLimite
      parameters:
        - name: cartaoId
          in: path
          description: ID do cartao
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/limite'          
            application/xml:
              schema:
                $ref: '#/components/schemas/limite'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /cartaoCredito/solicitarAumentoLimite:
    put:
      tags:
        - cartaoCredito
      summary: solicitar aumento de limite
      description: ''
      operationId: solicitarAumentoLimite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aumentoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/aumentoDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/aumentoDTO'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartaoCredito'          
            application/xml:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
          
  /cartaoCredito/atualizarEligivelAumentoLimite:
    put:
      tags:
        - cartaoCredito
      summary: atualizar elegibilidade de aumento de limite
      description: ''
      operationId: atualizarEligivelAumentoLimite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElegibilidadeDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/ElegibilidadeDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ElegibilidadeDTO'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cartaoCredito'          
            application/xml:
              schema:
                $ref: '#/components/schemas/cartaoCredito'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
          
  /cartaoCredito/{contaId}/{cartaoId}/fatura/:
    get:
      tags:
        - cartaoCredito
      summary: Recuperar fatura do cartao
      description: ''
      operationId: cartaoCreditoFatura
      parameters:
        - name: contaId
          in: path
          description: ID da conta do usuario
          required: true
          schema:
            type: integer
            format: int64
        - name: cartaoId
          in: path
          description: ID do cartao
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fatura'          
            application/xml:
              schema:
                $ref: '#/components/schemas/fatura'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found

  /fatura/{idCartao}:
    get:
      tags:
        - cartaoCredito
      summary: Recuperar faturas de um cartao
      description: ''
      operationId: fatura
      parameters:
        - name: idCartao
          in: path
          description: ID da conta do usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/faturas'          
            application/xml:
              schema:
                $ref: '#/components/schemas/faturas'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found 
    post:
      tags:
        - cartaoCredito
      summary: cadastra uma fatura de um cartao
      description: ''
      operationId: cartaoCreditoPagamento
      parameters:
        - name: idCartao
          in: path
          description: ID do cartao do usuario
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fatura'
          application/xml:
            schema:
              $ref: '#/components/schemas/fatura'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/fatura'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fatura'          
            application/xml:
              schema:
                $ref: '#/components/schemas/faturas'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found   
          
          
  /compra/{idCartao}:
    post:
      tags:
        - cartaoCredito
      summary: Realiza compra no cartao do usuario
      description: ''
      operationId: compra
      parameters:
        - name: idCartao
          in: path
          description: ID do cartao do usuario
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/compra'
          application/xml:
            schema:
              $ref: '#/components/schemas/compra'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/compra'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compra'          
            application/xml:
              schema:
                $ref: '#/components/schemas/compra'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found  
    get:
      tags:
        - cartaoCredito
      summary: Recuperar compras de um cartao
      description: ''
      operationId: getcompra
      parameters:
        - name: idCartao
          in: path
          description: ID da conta do usuario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compras'          
            application/xml:
              schema:
                $ref: '#/components/schemas/compras'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found 
    
components:
  schemas:
    cartoes:
          type: array
          xml:
            wrapped: true
            name: cartoes
          items:
            $ref: '#/components/schemas/cartaoCredito'
         
    cartaoCredito:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        idConta:
          type: integer
          format: int64
          example: 10
        nome:
          type: string
          example: 'John K. pascal'
        numero:
          type: string
          example: '1234 1232 1234 1232'
        dataVencimento:
          type: string  
        cvv:
          type: string
          example: '123'
        limite:
          type: number
          example: 9.999
        eligivelAumentoLimite:
          type: boolean
          example: 'false'
        virtual:
          type: boolean
          example: 'false'
      xml:
        name: cartaoCredito
    limite:
        type: object
        properties:
          valor:
            type: number
            format: int64
            example: 99.999
        xml:
          name: limite
    fatura:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 10
          idCartao:
            type: integer
            format: int64
            example: 10
          valorTotal:
            type: number
            format: int64
            example: 99.999
          paga:
            type: boolean
            example: false
          dataVencimento:
            type: string
            format: date
          mesVencimento:
            type: string
            enum:
              - JAN
              - FEV
              - MAR
              - ABR
              - MAI
              - JUN
              - JUL
              - AGO
              - SET
              - OUT
              - NOV
              - DEZ
          compras:
            type: array
            xml:
              wrapped: true
              name: compra
            items:
              $ref: '#/components/schemas/compra'
        xml:
          name: fatura
          
    compra:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 10
          idCartao:
            type: integer
            format: int64
            example: 10
          valor:
            type: number
            format: int64
            example: 99.999
          dataCompra:
            type: string
            format: date
          mesCompra:
            type: string
            enum:
              - JAN
              - FEV
              - MAR
              - ABR
              - MAI
              - JUN
              - JUL
              - AGO
              - SET
              - OUT
              - NOV
              - DEZ
          local:
            type: string
            example: 'uber'
          parcelas:
            type: integer
            example: 12
        xml:
          name: compra
    compras:
        type: array
        xml:
          wrapped: true
          name: compras
        items:
          $ref: '#/components/schemas/compra'
            
    faturas:
        type: array
        xml:
          wrapped: true
          name: faturas
        items:
          $ref: '#/components/schemas/fatura'
          
    aumentoDTO:
      type: object
      properties:
        idCartao:
          type: integer
          format: int64
          example: 10
        valor:
          type: number
       
      xml:
        name: aumentoDTO
        
    ElegibilidadeDTO:
      type: object
      properties:
        idCartao:
          type: integer
          format: int64
          example: 10
        valor:
          type: boolean
       
      xml:
        name: ElegibilidadeDTO
          
          
           
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vasco-bank-cartao/api/v1/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header